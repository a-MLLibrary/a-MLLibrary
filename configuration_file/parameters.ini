[DataPreparation]
split_test_set = True
scenario = Case0
test_cores = 
train_cores = 
target_column = 1
test_size = 0.2
cv_size = 0.2
test_data_size = [250]
train_data_size = [250]
hybrid_ml = off
op_analytical_ratio = 5
analytical_model = groupby
num_cores = 1
nn_loss_plots = off

[ML]
algorithms = ['DecisionTree', 'SVR']
data_preparation_class = Core_DP

[DebugLevel]
debug = True

[SVR]
C = [0.001, 0.01, 0.1, 1, 10, 50, 75]
epsilon = [0.05, 0.1, 0.2, 0.3, 0.5]
gamma = [1e-7, 1e-4, 0.001, 0.01, 0.1, 1]
kernel = ['linear', 'rbf', 'poly', 'sigmoid']
degree = [2, 3, 5, 7]

[DecisionTree]
criterion = ['mse', 'friedman_mse', 'mae']
max_depth = [3, 5, 10, 20]
max_features = ['auto', 'sqrt', 'log2']
min_samples_split = [0.01, 0.1, 0.2, 0.5]
min_samples_leaf = [0.01, 0.05, 0.1, 0.2, 0.3]

[RandomForest]
n_estimators = [5, 10, 50, 100, 200]
criterion = ['mse', 'mae']
max_features = ['auto', 'sqrt', 'log2']
max_depth = [3, 10, 20]
min_samples_split = [0.1, 0.5, 1.0]
min_samples_leaf = [1, 2, 4]

[LinearRegression]
fit_intercept = [True, False]
lasso = [True]
alpha = [0.001]

[NeuralNetwork]
num_layers = [1, 2, 3]
num_perceptrons = [[[3, 4, 5], [3, 4, 5], [3, 4, 5]]]
activation_functions = [['sigmoid', 'sigmoid', 'sigmoid'], ['relu', 'relu', 'relu'], ['tanh', 'tanh', 'tanh']]
learning_rate = [0.001, 0.01, 0.1]
beta1 = [0.7, 0.8, 0.9]
l2_penalty = [0.01, 0.05, 0.1]
loss = ['MSELoss']
num_minibatch = [1]
optimizer = ['Adam']

